{"version":3,"sources":["webpack:///./src/components/image/utils.js","webpack:///./src/utils.js","webpack:///./src/components/image/image.js","webpack:///./src/components/grid/index.js","webpack:///./src/components/typography/index.js","webpack:///./node_modules/core-js/modules/es6.string.bold.js","webpack:///./src/components/video/index.js","webpack:///./src/components/grid/workGrid.js","webpack:///./src/templates/work-template.js"],"names":["isProduction","process","Image","props","arr","getExtension","srcset","item","s","split","length","list","Set","map","data","reduce","acc","elem","index","currentExt","prefix","ext","key","srcSet","join","type","src","alt","StuffGrid","styled","div","media","xl","isProject","lg","md","sm","Item","full","css","xs","HeaderContainer","PageTitle","h2","color","CopyWrapper","PageCopy","p","bold","createHTML","this","Video","width","controls","splitted","WorkGrid","seoCat","name","content","tags","title","description","caption","meta","last","tag","i","className","imgs","img","fullWidth","mediaType","pageContext","pageData","navigationJson","projectsJson","pageConf"],"mappings":"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","file":"component---src-templates-work-template-js-4d769b61edd6ea104e10.js","sourcesContent":["export const groupByExtension = arr => {\n  const getExtension = item => {\n    const s = item.split(\" \")[0].split(\".\")\n    return s[s.length - 1]\n  }\n  const list = [...new Set(arr.map(getExtension))]\n  const data = arr.reduce((acc, elem, index) => {\n    const currentExt = getExtension(elem)\n    return {\n      ...acc,\n      [currentExt]: acc[currentExt] ? [...acc[currentExt], elem] : [elem],\n    }\n  }, {})\n  return {\n    list,\n    data,\n  }\n}\n","export const isProduction = process.env === \"production\"\n","import React from \"react\"\nimport { groupByExtension } from \"./utils\"\nimport { isProduction } from \"../../utils\"\n\nexport const Image = props => {\n  const { data, list } = groupByExtension(props.srcset)\n  const prefix = isProduction ? \"https://peder87.github.io/bettazorza/\" : \"\"\n  return (\n    <picture>\n      {list.map(ext => {\n        return (\n          <source\n            key={ext}\n            srcSet={data[ext].join(\", \")}\n            type={`image/${ext}`}\n          />\n        )\n      })}\n      <img src={`${prefix}${props.src}`} alt={props.alt} />\n    </picture>\n  )\n}\n","import styled, {css} from \"styled-components\"\nimport { media } from \"../../style/constants\"\n\nexport const StuffGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-column-gap: 2.2rem;\n  grid-row-gap: 2.2rem;\n  padding-bottom: 2.2rem;\n\n  ${media.xl`\n    grid-template-columns: ${props => props.isProject ? 'repeat(2,1fr)' : 'repeat(3,1fr)'};\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.lg`\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.md`\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.sm`\n    grid-template-columns: repeat(1, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 1rem;\n    grid-row-gap: 1.8rem;\n    /* padding-bottom: 1.8rem; */\n  `}\n`\n\nexport const Item = styled.div`\n  ${props => props.full && css`\n    grid-column: 1/3;\n    ${media.sm`\n      grid-column: 1/2;\n    `}\n    ${media.xs`\n      grid-column: 1/2;\n    `}\n  `}\n\n  & img {\n    width: 100%;\n  }\n`\n","import styled from \"styled-components\"\nimport { media } from \"../../style/constants\"\nimport { HeaderContainer } from \"../pageComponents/style\"\n\nexport const Header = styled(HeaderContainer)``\n\nexport const PageTitle = styled.h2`\n  font-size: 2.25rem;\n  font-weight: 600;\n  color: ${props => props.color};\n  ${media.sm`\n    font-size: 1.5rem;\n  `};\n  padding-bottom: 2rem;\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`\n\nexport const CopyWrapper = styled.div`\n  padding-bottom: 3rem;\n  ${media.md`\n    padding-bottom: 2rem;\n  `}\n`\n\nexport const PageCopy = styled.p`\n  padding: 0;\n  margin: 0;\n  text-align: left;\n  ${media.sm`\n    text-align: center;\n    font-size: 1.125rem;\n    font-style: normal; \n    /* line-height: 1.125rem; */\n    line-height: 1.1;\n  `}\n  font-size: 1.5rem;\n  line-height: 1.1;\n  font-weight: ${props => (props.bold ? 500 : 400)};\n\n  & span.bold {\n    font-weight: 600;\n    font-style: bold;\n  }\n`\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","import React from \"react\"\n\nconst getExtension = filepath => {\n  const splitted = filepath.split(\".\")\n  const extesion = splitted[splitted.length - 1]\n  return extesion\n}\n\nexport const Video = props => {\n  return (\n    <video width=\"400\" controls>\n      {props.srcset.map(item => {\n        const ext = getExtension(item)\n        return <source src={item} key={item} type={`video/${ext}`} />\n      })}\n    </video>\n  )\n}\n","import React from \"react\"\nimport { StuffGrid, Item } from \"./index\"\nimport { PageTitle, CopyWrapper, PageCopy } from \"../typography\"\nimport { Image } from \"../image/image\"\nimport { Video } from \"../video\"\nimport SEO from \"../../components/seo\"\n\nexport const WorkGrid = ({ data }) => {\n  const seoCat = {\n    name: \"categorie\",\n    content: data.tags.join(\", \"),\n  }\n  return (\n    <div>\n      <SEO title={data.title} description={data.caption} meta={[seoCat]} />\n      <PageTitle>{data.title}</PageTitle>\n      <CopyWrapper>\n        <PageCopy>{data.caption}</PageCopy>\n      </CopyWrapper>\n      <CopyWrapper last>\n        {data.tags.length > 0 &&\n          data.tags.map((tag, i) => {\n            const isLast = i === data.tags.length - 1\n            return !isLast ? (\n              <span className=\"tag\" key={tag}>\n                {tag} -{\" \"}\n              </span>\n            ) : (\n              <span className=\"tag\" key={tag}>\n                {tag}\n              </span>\n            )\n          })}\n      </CopyWrapper>\n      <StuffGrid isProject>\n        {data.imgs.map(img => (\n          <Item key={img.alt} full={img.fullWidth}>\n            {img.mediaType === \"img\" ? <Image {...img} /> : <Video {...img} />}\n          </Item>\n        ))}\n      </StuffGrid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Layout from '../components/layout'\nimport { WorkGrid } from '../components/grid/workGrid'\n\nexport default ({pageContext,...props}) => {\n  const { navigationJson, projectsJson } = pageContext.pageData.data\n  return (\n    <Layout pageConf={navigationJson}>\n      <WorkGrid data={projectsJson} />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}