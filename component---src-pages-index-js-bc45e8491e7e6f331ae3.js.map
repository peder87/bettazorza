{"version":3,"sources":["webpack:///./src/components/image/thumbnail.js","webpack:///./src/pages/home/index.js","webpack:///./src/components/image/utils.js","webpack:///./src/utils.js","webpack:///./src/components/image/image.js","webpack:///./src/components/grid/index.js","webpack:///./src/pages/index.js","webpack:///./node_modules/idx/lib/idx.js"],"names":["Thumbnail","props","ThumbWrapper","onClick","callback","path","srcset","alt","title","src","img","className","styled","div","colors","yellow","purple","ProjectList","projects","idx","pages","_","edges","order","flatOrder","map","e","node","workId","project","reduce","acc","elem","list","moveTo","navigate","projectList","wId","seoCat","name","content","p","join","isProject","length","meta","key","id","thumbnail","url","thumbset","isProduction","process","Image","arr","getExtension","item","s","split","Set","data","index","currentExt","prefix","ext","srcSet","type","StuffGrid","media","xl","lg","md","sm","Item","full","css","xs","pageConf","bgcolor","color","query","render","input","accessor","error","TypeError","nullPattern","test","undefinedPattern","module","exports"],"mappings":"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","file":"component---src-pages-index-js-bc45e8491e7e6f331ae3.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { colors } from \"../../style/constants\"\nimport { Image } from \"./image\"\n\nexport const Thumbnail = props => {\n  return (\n    <ThumbWrapper onClick={() => props.callback(props.path)}>\n      <figure>\n        <Image srcset={props.srcset} alt={props.title} src={props.img} />\n        <div className=\"background\" />\n        <div className=\"container\">\n          <span>{props.title}</span>\n        </div>\n      </figure>\n    </ThumbWrapper>\n  )\n}\n\nconst ThumbWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 0;\n\n  & figure {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n\n    & img {\n      width: 100%;\n      max-width: 100%;\n      max-height: 100%;\n      display: block;\n    }\n\n    .background {\n      position: absolute;\n      top: 0;\n      width: 100%;\n      content: \"\";\n      background: ${colors.yellow};\n      min-height: 100%;\n      height: auto;\n      opacity: 0;\n      -webkit-transition: 0.3s ease-in-out;\n      transition: 0.3 ease-in-out;\n    }\n\n    .container {\n      position: absolute;\n      top: 40%;\n      width: 100%;\n\n      & span {\n        width: 80%;\n        display: block;\n        position: relative;\n        top: 0;\n        height: auto;\n        margin: 0 auto;\n        padding: 0;\n        color: ${colors.purple};\n        font-weight: bold;\n        font-size: 24px;\n        text-transform: uppercase;\n        text-decoration: none;\n        text-align: center;\n        -webkit-transition: 0.3s ease-in-out;\n        transition: 0.3s ease-in-out;\n        opacity: 0;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n\n      & .background {\n        opacity: 0.9;\n      }\n\n      & .container span {\n        opacity: 1;\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { StuffGrid } from \"../../components/grid\"\nimport { Thumbnail } from \"../../components/image/thumbnail\"\nimport { navigate } from \"gatsby\"\nimport SEO from \"../../components/seo\"\nimport idx from \"idx\"\n\nexport default props => {\n  const projects = idx(props.pages, _ => _.projects.edges)\n  const order = idx(props.pages, _ => _.order.edges)\n  if (!projects || !order) return null\n  const flatOrder = order.map(e => e.node.workId)\n  const src = projects\n    .map(_ => _.project)\n    .reduce((acc, elem) => {\n      return {\n        ...acc,\n        [elem[\"id\"]]: elem,\n      }\n    }, {})\n  return <ProjectList projects={projects} list={flatOrder} src={src} />\n}\n\nconst ProjectList = props => {\n  const moveTo = path => {\n    navigate(path)\n  }\n  const projectList = props.list.map(wId => props.src[wId])\n  const seoCat = {\n    name: \"lavori\",\n    content: projectList.map(p => p.title).join(\", \"),\n  }\n  return (\n    <StuffGrid isProject={props.projects.length < 10}>\n      <SEO title=\"Home Page\" meta={[seoCat]} />\n      {projectList.map(project => {\n        return (\n          <Thumbnail\n            key={project.id}\n            title={project.title}\n            img={project.thumbnail}\n            path={project.url}\n            srcset={project.thumbset}\n            callback={moveTo}\n          />\n        )\n      })}\n    </StuffGrid>\n  )\n}\n","export const groupByExtension = arr => {\n  const getExtension = item => {\n    const s = item.split(\" \")[0].split(\".\")\n    return s[s.length - 1]\n  }\n  const list = [...new Set(arr.map(getExtension))]\n  const data = arr.reduce((acc, elem, index) => {\n    const currentExt = getExtension(elem)\n    return {\n      ...acc,\n      [currentExt]: acc[currentExt] ? [...acc[currentExt], elem] : [elem],\n    }\n  }, {})\n  return {\n    list,\n    data,\n  }\n}\n","export const isProduction = process.env === \"production\"\n","import React from \"react\"\nimport { groupByExtension } from \"./utils\"\nimport { isProduction } from \"../../utils\"\n\nexport const Image = props => {\n  const { data, list } = groupByExtension(props.srcset)\n  const prefix = isProduction ? \"https://peder87.github.io/bettazorza/\" : \"\"\n  return (\n    <picture>\n      {list.map(ext => {\n        return (\n          <source\n            key={ext}\n            srcSet={data[ext].join(\", \")}\n            type={`image/${ext}`}\n          />\n        )\n      })}\n      <img src={`${prefix}${props.src}`} alt={props.alt} />\n    </picture>\n  )\n}\n","import styled, {css} from \"styled-components\"\nimport { media } from \"../../style/constants\"\n\nexport const StuffGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-column-gap: 2.2rem;\n  grid-row-gap: 2.2rem;\n  padding-bottom: 2.2rem;\n\n  ${media.xl`\n    grid-template-columns: ${props => props.isProject ? 'repeat(2,1fr)' : 'repeat(3,1fr)'};\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.lg`\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.md`\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.sm`\n    grid-template-columns: repeat(1, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 1rem;\n    grid-row-gap: 1.8rem;\n    /* padding-bottom: 1.8rem; */\n  `}\n`\n\nexport const Item = styled.div`\n  ${props => props.full && css`\n    grid-column: 1/3;\n    ${media.sm`\n      grid-column: 1/2;\n    `}\n    ${media.xs`\n      grid-column: 1/2;\n    `}\n  `}\n\n  & img {\n    width: 100%;\n  }\n`\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Layout from '../components/layout'\nimport Home from './home'\n\nexport default (props) => {\n  const style = { \n    bgcolor: 'purple',\n    color: 'yellow'\n  }\n  return (\n    <Layout pageConf={style}>\n      <StaticQuery \n        query={query}\n        render={(data) => {\n        return <Home pages={data} />\n      }}\n      />\n    </Layout>\n  )\n}\n\nconst query = graphql`\n  query MyQuery {\n    projects: allProjectsJson {\n      edges {\n      project: node {\n        id\n        thumbnail\n        thumbset\n        url\n        title\n        order\n      }\n    }\n  }\n  order: allProjectsOrderJson {\n    edges {\n      node {\n        workId\n      }\n    }\n  }\n}\n`","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n * @format\n */\n'use strict'; // eslint-disable-line strict\n\n/**\n * Traverses properties on objects and arrays. If an intermediate property is\n * either null or undefined, it is instead returned. The purpose of this method\n * is to simplify extracting properties from a chain of maybe-typed properties.\n *\n * === EXAMPLE ===\n *\n * Consider the following type:\n *\n *   const props: {\n *     user: ?{\n *       name: string,\n *       friends: ?Array<User>,\n *     }\n *   };\n *\n * Getting to the friends of my first friend would resemble:\n *\n *   props.user &&\n *   props.user.friends &&\n *   props.user.friends[0] &&\n *   props.user.friends[0].friends\n *\n * Instead, `idx` allows us to safely write:\n *\n *   idx(props, _ => _.user.friends[0].friends)\n *\n * The second argument must be a function that returns one or more nested member\n * expressions. Any other expression has undefined behavior.\n *\n * === NOTE ===\n *\n * The code below exists for the purpose of illustrating expected behavior and\n * is not meant to be executed. The `idx` function is used in conjunction with a\n * Babel transform that replaces it with better performing code:\n *\n *   props.user == null ? props.user :\n *   props.user.friends == null ? props.user.friends :\n *   props.user.friends[0] == null ? props.user.friends[0] :\n *   props.user.friends[0].friends\n *\n * All this machinery exists due to the fact that an existential operator does\n * not currently exist in JavaScript.\n */\n\nfunction idx(input, accessor) {\n  try {\n    return accessor(input);\n  } catch (error) {\n    if (error instanceof TypeError) {\n      if (nullPattern.test(error)) {\n        return null;\n      } else if (undefinedPattern.test(error)) {\n        return undefined;\n      }\n    }\n\n    throw error;\n  }\n}\n/**\n * Some actual error messages for null:\n *\n * TypeError: Cannot read property 'bar' of null\n * TypeError: Cannot convert null value to object\n * TypeError: foo is null\n * TypeError: null has no properties\n * TypeError: null is not an object (evaluating 'foo.bar')\n * TypeError: null is not an object (evaluating '(\" undefined \", null).bar')\n */\n\n\nvar nullPattern = /^null | null$|^[^(]* null /i;\nvar undefinedPattern = /^undefined | undefined$|^[^(]* undefined /i;\nidx[\"default\"] = idx;\nmodule.exports = idx;"],"sourceRoot":""}