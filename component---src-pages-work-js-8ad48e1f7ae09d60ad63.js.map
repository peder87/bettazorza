{"version":3,"sources":["webpack:///./src/components/card/style.js","webpack:///./src/components/card/index.js","webpack:///./src/pages/work.js","webpack:///./src/components/grid/index.js"],"names":["CardContainer","styled","div","colors","cardBg","purple","CardIcon","media","sm","props","img","CardTitle","h4","md","CardCaption","p","Card","title","caption","query","render","allWorksJson","pageConf","bgcolor","color","meta","name","content","nodes","map","c","toLowerCase","join","card","key","id","StuffGrid","xl","isProject","lg","Item","full","css","xs"],"mappings":"gsEAGO,IAAMA,EAAgBC,UAAOC,IAAV,2EAAGD,CAAH,uEAGJE,IAAOC,OAClBD,IAAOE,QAILC,EAAWL,UAAOC,IAAV,sEAAGD,CAAH,iIAEjBM,IAAMC,GAFW,MAMK,SAAAC,GAAK,OAAIA,EAAMC,OAM5BC,EAAYV,UAAOW,GAAV,uEAAGX,CAAH,sEAIlBM,IAAMM,GAJY,MASTC,EAAcb,UAAOc,EAAV,yEAAGd,CAAH,wBAEpBM,IAAMM,GAFc,MC7BXG,EAAO,SAAC,GAA6B,IAA3BN,EAA0B,EAA1BA,IAAKO,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACjC,OACE,6BACE,kBAAClB,EAAD,KACE,kBAACM,EAAD,CAAUI,IAAKA,IACf,kBAACC,EAAD,KAAYM,GACZ,kBAACH,EAAD,KAAcI,M,YCwBhBC,GA3BS,mBAACV,GAEd,OACE,kBAAC,cAAD,CACEU,MAAOA,EACPC,OAAQ,YAAqB,IAAnBC,EAAkB,EAAlBA,aAKR,OACE,kBAAC,IAAD,CAAQC,SALI,CACZC,QAAS,QACTC,MAAO,aAIL,kBAAC,IAAD,CAAKP,MAAM,cAAcQ,KAAM,CAAC,CAC9BC,KAAM,cACNC,QAASN,EAAaO,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEb,MAAMc,iBAAeC,KAAK,UAEnE,kBAAC,IAAD,KAEIX,EAAaO,MAAMC,KAAI,SAACI,GAAD,OAAU,kBAAC,EAAD,eAAMC,IAAKD,EAAKE,IAAQF,UAfrE,UAwBO,c,0wCC9BJ,IAAMG,EAAYnC,UAAOC,IAAV,sEAAGD,CAAH,uKAQlBM,IAAM8B,GARY,KASO,SAAA5B,GAAK,OAAIA,EAAM6B,UAAY,gBAAkB,mBAOtE/B,IAAMgC,GAhBY,KAwBlBhC,IAAMM,GAxBY,KAgClBN,IAAMC,GAhCY,MAyCTgC,EAAOvC,UAAOC,IAAV,iEAAGD,CAAH,4BACb,SAAAQ,GAAK,OAAIA,EAAMgC,MAAQC,cAAd,4BAEPnC,IAAMC,GAFC,KAKPD,IAAMoC,GALC","file":"component---src-pages-work-js-8ad48e1f7ae09d60ad63.js","sourcesContent":["import styled from \"styled-components\"\nimport { colors, media } from \"../../style/constants\"\n\nexport const CardContainer = styled.div`\n  padding: 2em;\n  height: 20em;\n  background-color: ${colors.cardBg};\n  color: ${colors.purple};\n  width: 100%;\n`\n\nexport const CardIcon = styled.div`\n  height: 4.5em;\n  ${media.sm`\n    height: 3.5em;\n  `}\n  width: 100%;\n  background-image: url(${props => props.img});\n  background-repeat: no-repeat;\n  background-size: contain;\n  margin-bottom: 1em;\n`\n\nexport const CardTitle = styled.h4`\n  text-transform: uppercase;\n  font-weight: 600;\n  margin-bottom: 0.25em;\n  ${media.md`\n    width: 80%;\n  `}\n`\n\nexport const CardCaption = styled.p`\n  font-weight: 400;\n  ${media.md`\n    width: 80%;\n  `}\n`\n","import React from \"react\"\nimport { CardContainer, CardCaption, CardIcon, CardTitle } from \"./style\"\n\nexport const Card = ({ img, title, caption }) => {\n  return (\n    <div>\n      <CardContainer>\n        <CardIcon img={img} />\n        <CardTitle>{title}</CardTitle>\n        <CardCaption>{caption}</CardCaption>\n      </CardContainer>\n    </div>\n  )\n}\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Layout from '../components/layout'\nimport {StuffGrid} from '../components/grid'\nimport {Card} from '../components/card'\nimport SEO from '../components/seo'\nexport default (props) => {\n  \n  return (\n    <StaticQuery \n      query={query}\n      render={({allWorksJson}) => {\n        const style = {\n          bgcolor: 'white',\n          color: 'darkGray'\n        }\n        return (\n          <Layout pageConf={style}>\n            <SEO title=\"cosa faccio\" meta={[{\n              name: 'cosa faccio',\n              content: allWorksJson.nodes.map(c => c.title.toLowerCase()).join(', '), \n            }]}/>\n            <StuffGrid>\n              {\n                allWorksJson.nodes.map((card) => <Card key={card.id} {...card}/>)\n              }\n            </StuffGrid>\n          </Layout>)\n      }}\n    />\n  )\n}\n\nconst query = graphql`\n  query {\n    allWorksJson {\n      nodes {\n        caption\n        img\n        srcset\n        title\n        id\n      }\n    }\n  }\n`","import styled, {css} from \"styled-components\"\nimport { media } from \"../../style/constants\"\n\nexport const StuffGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-column-gap: 2.2rem;\n  grid-row-gap: 2.2rem;\n  padding-bottom: 2.2rem;\n\n  ${media.xl`\n    grid-template-columns: ${props => props.isProject ? 'repeat(2,1fr)' : 'repeat(3,1fr)'};\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.lg`\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.md`\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 2.2rem;\n    grid-row-gap: 2.2rem;\n    padding-bottom: 2.2rem;\n  `}\n\n  ${media.sm`\n    grid-template-columns: repeat(1, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    grid-column-gap: 1rem;\n    grid-row-gap: 1.8rem;\n    /* padding-bottom: 1.8rem; */\n  `}\n`\n\nexport const Item = styled.div`\n  ${props => props.full && css`\n    grid-column: 1/3;\n    ${media.sm`\n      grid-column: 1/2;\n    `}\n    ${media.xs`\n      grid-column: 1/2;\n    `}\n  `}\n\n  & img {\n    width: 100%;\n  }\n`\n"],"sourceRoot":""}